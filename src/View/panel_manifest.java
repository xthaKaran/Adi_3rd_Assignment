/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Conteroller.CompanyController;
import Conteroller.ManifestController;
import Model.Company;
import Model.Manifest;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Karan
 */
public class panel_manifest extends javax.swing.JPanel {

     private int comid;
     private String date;
     
     public panel_manifest() {
       initComponents();
       date =new SimpleDateFormat("YYYY/MM/dd").format(Calendar.getInstance().getTime()) ;  
       txt_time.setText(date);
        TableView();  
        ComboxCompany();
        comboManifest();
           }
    
    public void ComboxCompany(){
     CompanyController contro= new CompanyController();
        ResultSet rs= contro.companyId();
        try {
             while (rs.next()) {
                String name = rs.getString("name");
                jComboBox_company.addItem(name);
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void comboManifest(){
     ManifestController contro= new ManifestController();
        ResultSet rs= contro.ManifestId();
        try {
             while (rs.next()) {
                String id = rs.getString("mid");
                jComboBox_manifest.addItem(id);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
       public void TableView(){
     ManifestController contro= new ManifestController();
        ResultSet rs= contro.ManifestId();
        try {
             while (rs.next()) {
            
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_company = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txt_manifestname = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txt_time = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_description = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_modify = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_clean = new javax.swing.JButton();
        jComboBox_manifest = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));

        jLabel5.setFont(new java.awt.Font("Imprint MT Shadow", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Manifest");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(396, 396, 396)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(357, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jComboBox_company.setBackground(new java.awt.Color(0, 51, 204));
        jComboBox_company.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jComboBox_company.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox_company.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Company" }));
        jComboBox_company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_companyActionPerformed(evt);
            }
        });

        txt_manifestname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_manifestnameActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 51, 204));
        jButton1.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_time.setBackground(new java.awt.Color(0, 51, 204));
        txt_time.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        txt_time.setForeground(new java.awt.Color(255, 255, 255));
        txt_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_timeActionPerformed(evt);
            }
        });

        txt_description.setColumns(20);
        txt_description.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        txt_description.setRows(5);
        jScrollPane1.setViewportView(txt_description);

        jLabel4.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Company Name: ");

        jLabel6.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("Today Date:");

        jLabel7.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 204));
        jLabel7.setText("Manifest ID: ");

        jLabel8.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 204));
        jLabel8.setText("Manifest Description: ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        btn_modify.setBackground(new java.awt.Color(0, 51, 204));
        btn_modify.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_modify.setForeground(new java.awt.Color(255, 255, 255));
        btn_modify.setText("Modify");
        btn_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifyActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(0, 51, 204));
        btn_delete.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_clean.setBackground(new java.awt.Color(0, 51, 204));
        btn_clean.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_clean.setForeground(new java.awt.Color(255, 255, 255));
        btn_clean.setText("Refresh");
        btn_clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cleanActionPerformed(evt);
            }
        });

        jComboBox_manifest.setBackground(new java.awt.Color(0, 51, 204));
        jComboBox_manifest.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jComboBox_manifest.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox_manifest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search By Manifest ID" }));
        jComboBox_manifest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_manifestActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 204));
        jLabel9.setText("Manifest Name: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(txt_time, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addGap(50, 50, 50)
                        .addComponent(jComboBox_manifest, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9)
                        .addGap(33, 33, 33)
                        .addComponent(txt_manifestname, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addGap(26, 26, 26)
                        .addComponent(jComboBox_company, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_clean)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txt_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox_manifest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(txt_manifestname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_company, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel8))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_modify)
                            .addComponent(jButton1)
                            .addComponent(btn_delete)
                            .addComponent(btn_clean)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_timeActionPerformed

    private void txt_manifestnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_manifestnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_manifestnameActionPerformed

    private void jComboBox_companyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_companyActionPerformed
      String namee = (String) this.jComboBox_company.getSelectedItem();
        
       Company com=new Company();
       com.setName(namee);
       
        
        CompanyController contro= new CompanyController();
        ResultSet rs= contro.getCompanyName(com);
        try {
             while (rs.next()) {
                comid = rs.getInt("cid");
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox_companyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String name=txt_manifestname.getText();
        String description=txt_description.getText();
         Manifest mani= new Manifest();
         mani.setCid(comid);
         mani.setManifestName(name);
         mani.setDescription(description);
         mani.setDate(date);
         
        if (name.isEmpty() || description.isEmpty()|| txt_time.getText().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Please Enter All Text Field");
        } else if (jComboBox_company.getSelectedItem().equals("Select Company")){
        
            JOptionPane.showMessageDialog(null, "Please Select Comapany");
        }else{
                ManifestController mc = new ManifestController();       
                int res = mc.InsertManifest(mani);
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Manifest Added Sucessfully");
                    TableView();                   
                    comboManifest();
                    txt_manifestname.setText(null);
                    txt_description.setText(null);
                    jComboBox_company.setSelectedItem("Search By Manifest Id");
                    jComboBox_manifest.setSelectedItem("Select Comapny");
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Manifest Cannot Added");
                     txt_manifestname.setText(null);
                    txt_description.setText(null);
                     jComboBox_company.setSelectedItem("Search By Manifest Id");
                    jComboBox_manifest.setSelectedItem("Select Comapny");
                }
        }
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifyActionPerformed
        String name=txt_manifestname.getText();
        String description=txt_description.getText();
        int  id=  Integer.parseInt((String) jComboBox_manifest.getSelectedItem());
         Manifest mani= new Manifest();
         mani.setCid(comid);
         mani.setManifestName(name);
         mani.setDescription(description);
         mani.setDate(date);
         mani.setId(id);
         
         
        if (name.isEmpty() || description.isEmpty()|| txt_time.getText().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Please Enter All Text Field");
        } else if (jComboBox_company.getSelectedItem().equals("Select Company")){
        
            JOptionPane.showMessageDialog(null, "Please Select Id");
        }else{
                ManifestController mc = new ManifestController();       
                int res = mc.UpdateManifest(mani);
               
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Manifest Update Sucessfully");
                    txt_manifestname.setText(null);
                    txt_description.setText(null);
                     jComboBox_company.setSelectedItem("Search By Manifest Id");
                    jComboBox_manifest.setSelectedItem("Select Comapny");
                    TableView();  
                    comboManifest();
                } else {
                    JOptionPane.showMessageDialog(null, "Manifest Cannot Update");
                     txt_manifestname.setText(null);
                    txt_description.setText(null);
                    
                     jComboBox_company.setSelectedItem("Search By Manifest Id");
                    jComboBox_manifest.setSelectedItem("Select Comapny");
                }
        }
    }//GEN-LAST:event_btn_modifyActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        String name=txt_manifestname.getText();
        int  id=  Integer.parseInt((String) jComboBox_manifest.getSelectedItem());
        String description=txt_description.getText();
         Manifest mani= new Manifest();
         mani.setId(id);
       
         
        if (name.isEmpty() || description.isEmpty()|| txt_time.getText().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Please Enter All Text Field");
        }else{
                ManifestController mc = new ManifestController();       
                int res = mc.DeleteManifest(mani);
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Manifest Delete Sucessfully");
                    txt_manifestname.setText(null);
                    txt_description.setText(null);
                     jComboBox_company.setSelectedItem("Search By Manifest Id");
                    jComboBox_manifest.setSelectedItem("Select Comapny");
                    TableView();  
                    comboManifest();
                } else {
                    JOptionPane.showMessageDialog(null, "Manifest Cannot Delete");
                     txt_manifestname.setText(null);
                    txt_description.setText(null);
                     jComboBox_company.setSelectedItem("Search By Manifest Id");
                    jComboBox_manifest.setSelectedItem("Select Comapny");
                }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cleanActionPerformed
          TableView();  
        ComboxCompany();
        comboManifest();
    }//GEN-LAST:event_btn_cleanActionPerformed

    private void jComboBox_manifestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_manifestActionPerformed
         if (jComboBox_manifest.getSelectedItem()!=null) {
        
                if (jComboBox_manifest.getSelectedItem().equals("Search By Manifest ID")) {
                 JOptionPane.showMessageDialog(null, "Please Select Manifest Id");
             }else{
                    String cid=null;
                    int  id=  Integer.parseInt((String) jComboBox_manifest.getSelectedItem());
                     Manifest m=new Manifest();
                     m.setId(id);


                   ManifestController contro= new ManifestController();

                    ResultSet rs= contro.getManifestDetails(m);
                    try {
                        if (rs.next()) {
                            String name = rs.getString("mname");
                            txt_manifestname.setText(name);
                            cid = rs.getString("cid");
                            jComboBox_company.setSelectedItem(cid);

                            String desc = rs.getString("description");
                            txt_description.setText(desc);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
                    }

                     int  ciid =Integer.parseInt(cid);
                     Company c=new Company();
                     c.setId(ciid);
                      CompanyController cc=new CompanyController();
                      ResultSet resel= cc.getCompanyDetails(c);
                       try {
                        if (resel.next()) {
                            String naaame = resel.getString("name");
                            jComboBox_company.setSelectedItem(naaame);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }


         }
       
        
    }//GEN-LAST:event_jComboBox_manifestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clean;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_modify;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox_company;
    private javax.swing.JComboBox<String> jComboBox_manifest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txt_description;
    private javax.swing.JTextField txt_manifestname;
    private javax.swing.JTextField txt_time;
    // End of variables declaration//GEN-END:variables
}
