/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Conteroller.CompanyController;
import Conteroller.ManifestController;
import Conteroller.ProductController;
import Model.Company;
import Model.Manifest;
import Model.Product;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.FieldPosition;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Karan
 */
public class panel_product extends javax.swing.JPanel {

    /**
     * Creates new form panel_product
     */
   private  int maniid;
   private String date;
    public panel_product() {
        initComponents();
        date =new SimpleDateFormat("YYYY/MM/dd").format(Calendar.getInstance().getTime()) ;  
       txt_time.setText(date);
        getManifestName();
        getProductId();
        TableView();
         
    }
    
    public void getManifestName(){
        ManifestController contro= new ManifestController();
        ResultSet rs= contro.ManifestId();
        try {
             while (rs.next()) {
                String name = rs.getString("mname");
                jComboBox_manifest.addItem(name);
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void getProductId(){
        ProductController contro= new ProductController();
        ResultSet ras= contro.ProductId();
        try {
             while (ras.next()) {
                String id = ras.getString("pid");
                jComboBox_id.addItem(id);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
       public void TableView(){
        ProductController contro= new ProductController();
        ResultSet rrs= contro.ProductId();
        try {
             while (rrs.next()) {
            
                jTable1.setModel(DbUtils.resultSetToTableModel(rrs));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        btn_add3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_manifest = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        txt_quantity = new javax.swing.JTextField();
        txt_size = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_destination = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btn_modify = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        txt_date = new com.toedter.calendar.JDateChooser();
        jComboBox_id = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_time = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        btn_add3.setText("Add");
        btn_add3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add3ActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));
        jPanel1.setForeground(new java.awt.Color(0, 51, 204));

        jLabel5.setFont(new java.awt.Font("Imprint MT Shadow", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(399, 399, 399)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jComboBox_manifest.setBackground(new java.awt.Color(0, 51, 204));
        jComboBox_manifest.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jComboBox_manifest.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox_manifest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Manifest" }));
        jComboBox_manifest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_manifestActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("Product Name: ");

        jLabel2.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("Product Quantity:");

        txt_name.setBackground(new java.awt.Color(0, 51, 204));
        txt_name.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        txt_name.setForeground(new java.awt.Color(255, 255, 255));
        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });

        txt_quantity.setBackground(new java.awt.Color(0, 51, 204));
        txt_quantity.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        txt_quantity.setForeground(new java.awt.Color(255, 255, 255));
        txt_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_quantityActionPerformed(evt);
            }
        });
        txt_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_quantityKeyPressed(evt);
            }
        });

        txt_size.setBackground(new java.awt.Color(0, 51, 204));
        txt_size.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        txt_size.setForeground(new java.awt.Color(255, 255, 255));
        txt_size.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sizeKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("Product Total Weight:");

        jLabel4.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Product Destination:");

        jComboBox_destination.setBackground(new java.awt.Color(0, 51, 204));
        jComboBox_destination.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jComboBox_destination.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox_destination.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Destination", "Kathnamdu", "Ilam", "Lalitpur", "Bhaktbur", "Pokhera", "Biratnagar", "Bharatpur", "Birganj", "Butwal", "Dharan", "Dhangadhi", "Janakpur", "Hetauda", "Itahari", "Napalganj", "Gorkha", " " }));

        jLabel6.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("Delivary Date:");

        btn_add.setBackground(new java.awt.Color(0, 51, 204));
        btn_add.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_add.setForeground(new java.awt.Color(255, 255, 255));
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 204));
        jLabel7.setText("Manifest Name:");

        btn_modify.setBackground(new java.awt.Color(0, 51, 204));
        btn_modify.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_modify.setForeground(new java.awt.Color(255, 255, 255));
        btn_modify.setText("Modify");
        btn_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifyActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(0, 51, 204));
        btn_delete.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_clear.setBackground(new java.awt.Color(0, 51, 204));
        btn_clear.setFont(new java.awt.Font("Imprint MT Shadow", 0, 18)); // NOI18N
        btn_clear.setForeground(new java.awt.Color(255, 255, 255));
        btn_clear.setText("Refresh");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        txt_date.setBackground(new java.awt.Color(0, 51, 204));
        txt_date.setForeground(new java.awt.Color(255, 255, 255));
        txt_date.setToolTipText("");
        txt_date.setDateFormatString("yyyy-MM-dd");

        jComboBox_id.setBackground(new java.awt.Color(0, 51, 204));
        jComboBox_id.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jComboBox_id.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox_id.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search By Product ID" }));
        jComboBox_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_idActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        txt_time.setBackground(new java.awt.Color(0, 51, 204));
        txt_time.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        txt_time.setForeground(new java.awt.Color(255, 255, 255));
        txt_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_timeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Imprint MT Shadow", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 204));
        jLabel8.setText("Today Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1))
                                .addComponent(jLabel7)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_time, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox_manifest, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txt_name)
                            .addComponent(txt_size)
                            .addComponent(txt_quantity)
                            .addComponent(jComboBox_destination, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jComboBox_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_manifest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_modify)
                            .addComponent(btn_add)
                            .addComponent(btn_delete)
                            .addComponent(btn_clear))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_manifestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_manifestActionPerformed
      String namee = (String) this.jComboBox_manifest.getSelectedItem();
        
       Manifest mani=new Manifest();
       mani.setManifestName(namee);
       
        
        ManifestController contro= new ManifestController();
        ResultSet rs= contro.getManifestName(mani);
        try {
             while (rs.next()) {
                maniid = rs.getInt("mid");
                  
            }
        } catch (SQLException ex) {
            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox_manifestActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String name=txt_name.getText();
        int quantity= Integer.parseInt(txt_quantity.getText());
        DateFormat df=new SimpleDateFormat("YYYY-MM-DD");
        String date=df.format(txt_date.getDate());
        String time=txt_time.getText();
        int size =Integer.parseInt(txt_size.getText());
        String destination= (String) jComboBox_destination.getSelectedItem();
        
       
        
        if (name.isEmpty() || destination.isEmpty()|| date.isEmpty() ) {
                 JOptionPane.showMessageDialog(null, "Please Enter All Text Field");
        }else if (jComboBox_manifest.getSelectedItem().equals("Select Manifest")){
        
            JOptionPane.showMessageDialog(null, "Please Select Manifest");
        }else if (jComboBox_destination.getSelectedItem().equals("Select Destination")){
        
            JOptionPane.showMessageDialog(null, "Please Product Destination");
        } else{
                Product p= new Product();
                p.setName(name);
                p.setDeliverydate(date);
                p.setDestination(destination);
                p.setMid(maniid);
                p.setDate(date);
                p.setQuantity(quantity);
                p.setSize(size);
                 ProductController pc= new ProductController();
               int res=  pc.InsertProduct(p);
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Product Added Sucessfully");
                    jComboBox_id.removeAllItems();
                    jComboBox_manifest.removeAllItems();
                    getManifestName();
                    getProductId();
                    TableView();
                    txt_name.setText(null);
                    txt_quantity.setText(null);
                    txt_size.setText(null);
                    jComboBox_destination.setSelectedItem("Select Destination");
                   jComboBox_id.setSelectedItem("Select By Product ID");
                   jComboBox_manifest.setSelectedItem("Select Manifest");
                   
                } else {
                    JOptionPane.showMessageDialog(null, "Product Cannot Added");
                    txt_name.setText(null);
                    txt_quantity.setText(null);
                    txt_size.setText(null);
                    jComboBox_destination.setSelectedItem("Select Destination");
                   jComboBox_id.setSelectedItem("Select By Product ID");
                   jComboBox_manifest.setSelectedItem("Select Manifest");
                }
        }
        
     
        
        
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_add3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_add3ActionPerformed

    private void btn_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifyActionPerformed
       String name=txt_name.getText();
       int  id=  Integer.parseInt((String) jComboBox_id.getSelectedItem());
        int quantity= Integer.parseInt(txt_quantity.getText());
        DateFormat df=new SimpleDateFormat("YYYY-MM-DD");
        String date=df.format(txt_date.getDate());
        int size =Integer.parseInt(txt_size.getText());
        String destination= (String) jComboBox_destination.getSelectedItem();
        
        
        
         
        if (name.isEmpty() || destination.isEmpty()|| date.isEmpty() ) {
                 JOptionPane.showMessageDialog(null, "Please Enter All Text Field");
        }else if (jComboBox_manifest.getSelectedItem().equals("Select Manifest")){
        
            JOptionPane.showMessageDialog(null, "Please Select Manifest");
        }else if (jComboBox_destination.getSelectedItem().equals("Select Destination")){
        
            JOptionPane.showMessageDialog(null, "Please Product Destination");
        } else{ 
                    Product p= new Product();
                p.setName(name);
                p.setDeliverydate(date);
                p.setDestination(destination);
                p.setMid(maniid);
                p.setQuantity(quantity);
                p.setSize(size);
                p.setPid(id);
                 ProductController pc= new ProductController();
               int res=  pc.UpdateProduct(p);
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Product Modify Sucessfully");
                     jComboBox_id.removeAllItems();
                      jComboBox_manifest.removeAllItems();
                    getManifestName();
                    getProductId();
                    TableView();
                    txt_name.setText(null);
                    txt_quantity.setText(null);
                    txt_size.setText(null);
                    jComboBox_destination.setSelectedItem("Select Destination");
                   jComboBox_id.setSelectedItem("Search By Product ID");
                   jComboBox_manifest.setSelectedItem("Select Manifest");
                   
                } else {
                    JOptionPane.showMessageDialog(null, "Product Cannot Modify");
                    txt_name.setText(null);
                    txt_quantity.setText(null);
                    txt_size.setText(null);
                    jComboBox_destination.setSelectedItem("Select Destination");
                   jComboBox_id.setSelectedItem("Search By Product ID");
                   jComboBox_manifest.setSelectedItem("Select Manifest");
                }
        }
        
        
    }//GEN-LAST:event_btn_modifyActionPerformed

    private void txt_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_quantityActionPerformed

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String name=txt_name.getText();     
       
        String destination= (String) jComboBox_destination.getSelectedItem();
        int  id=  Integer.parseInt((String) jComboBox_id.getSelectedItem());
   
          
        if (name.isEmpty() || destination.isEmpty() ) {
                 JOptionPane.showMessageDialog(null, "Please Enter All Text Field");
        }else if (jComboBox_manifest.getSelectedItem().equals("Select Manifest")){
        
            JOptionPane.showMessageDialog(null, "Please Select Manifest");
        } else{
            
                 Product p=new Product();
                    p.setPid(id);
                    System.out.println(id);
                 ProductController pc= new ProductController();
               int res=  pc.DeleteProduct(p);
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Product Delete Sucessfully");
                    jComboBox_id.removeAllItems();
                    jComboBox_manifest.removeAllItems();
                    getManifestName();
                    getProductId();
                    TableView();
                   txt_name.setText(null);
                    txt_quantity.setText(null);
                    txt_size.setText(null);
                    jComboBox_destination.setSelectedItem("Select Destination");
                   jComboBox_id.setSelectedItem("Select By Product ID");
                   jComboBox_manifest.setSelectedItem("Select Manifest");
                } else {
                    JOptionPane.showMessageDialog(null, "Product Delete Added");
                    txt_name.setText(null);
                    txt_quantity.setText(null);
                    txt_size.setText(null);
                    jComboBox_destination.setSelectedItem("Select Destination");
                   jComboBox_id.setSelectedItem("Select By Product ID");
                   jComboBox_manifest.setSelectedItem("Select Manifest");
                }
        }
        
     
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
                     
        getManifestName();
        getProductId();
        TableView();
         
    }//GEN-LAST:event_btn_clearActionPerformed

    private void jComboBox_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_idActionPerformed
        
        if (jComboBox_id.getSelectedItem()!=null) {
                if (jComboBox_id.getSelectedItem().equals("Search By Product ID")) {
                    JOptionPane.showMessageDialog(null, "Plaease Select Product Id");
                }else{
                                        String mid=null;
                        int  id=  Integer.parseInt((String) jComboBox_id.getSelectedItem());
                         Product p=new Product();
                         p.setPid(id);

                            ProductController contro= new ProductController();

                        ResultSet result= contro.getProductName(p);
                        try {
                            if (result.next()) {
                                String name = result.getString("name");
                                txt_name.setText(name); 
                                mid = result.getString("mid");
                                String quantity= result.getString("quantity");
                                txt_quantity.setText(quantity);
                                String size= result.getString("weight");
                                txt_size.setText(size);
                                String destination= result.getString("destination");
                                jComboBox_destination.setSelectedItem(destination);
                                String deliveryDate= result.getString("deliverydate");
                                

                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(panel_company.class.getName()).log(Level.SEVERE, null, ex);
                        }

                       int miid=Integer.parseInt(mid);
                       Manifest mm=new Manifest();
                       mm.setId(miid);

                       ManifestController mc= new ManifestController();
                       ResultSet resultt=mc.getManifestDetails(mm);

                       try {
                           if (resultt.next()) {
                               String mani_name= resultt.getString("mname");
                               jComboBox_manifest.setSelectedItem(mani_name);
                           }
                       } catch (SQLException ex) {
                           Logger.getLogger(panel_product.class.getName()).log(Level.SEVERE, null, ex);
                       }
            }

                }
        
    }//GEN-LAST:event_jComboBox_idActionPerformed

    private void txt_quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_quantityKeyPressed
         char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please input valid Quantity only digit numbers");
            txt_quantity.setText(null);
        }
    }//GEN-LAST:event_txt_quantityKeyPressed

    private void txt_sizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sizeKeyPressed
      
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_SPACE) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please input valid Weight only digit numbers");
            txt_size.setText(null);
        }
    }//GEN-LAST:event_txt_sizeKeyPressed

    private void txt_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_timeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_add3;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_modify;
    private javax.swing.JComboBox<String> jComboBox_destination;
    private javax.swing.JComboBox<String> jComboBox_id;
    private javax.swing.JComboBox<String> jComboBox_manifest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser txt_date;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_quantity;
    private javax.swing.JTextField txt_size;
    private javax.swing.JTextField txt_time;
    // End of variables declaration//GEN-END:variables
}
